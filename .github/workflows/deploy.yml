name: Spring Boot & Gradle CI/CD 

on:
  push:
    branches: [ main, dev ]

jobs:
  build:
    # 실행 환경 지정
    runs-on: ubuntu-latest

    # Task의 sequence를 명시한다.
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew clean build
      
     # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy

    # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/

    # appspec.yml Copy
    - name: Copy appspec
      run: cp appspec.yml ./deploy/

    # script file Copy
    - name: Copy shell
      run: cp ./scripts/* ./deploy/

    - name: Grant execute permission for gradlew
      run: chmod +x ./deploy/deploy.sh

    # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -r -qq -j ./qnnect-build.zip ./deploy

    # S3 Bucket으로 copy
    - name: Deliver to AWS S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
      run: |
        aws s3 cp \
        --region ap-northeast-2 \
        --acl private \
        ./qnnect-build.zip s3://dev-qnnect-build/
        
        
    # Deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
      run: |
        aws deploy create-deployment \
        --application-name dev-qnnect-service \
        --deployment-group-name dev-qnnect-service-group \
        --file-exists-behavior OVERWRITE \
        --s3-location bucket=dev-qnnect-build,bundleType=zip,key=qnnect-build.zip \
        --region ap-northeast-2
